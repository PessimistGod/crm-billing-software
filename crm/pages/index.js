import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import Company from '@/Models/createCompany';
import connectDB from '@/Middleware/db';
import jwt_decode from 'jwt-decode';
import Image from 'next/image';
import Images from '@/Models/Image'


const Home = ({ company, images }) => {
  const router = useRouter();
  const [registration, setRegistration] = useState('');
  useEffect(() => {
    const token = localStorage.getItem('token');
    try {
      if (token) {
        const decodedToken = jwt_decode(token);
        setRegistration(decodedToken.id);
      } else {
        router.push('/Authenticate/Login');
      }
    } catch (error) {
      console.error(error);
      router.push('/Authenticate/Login');
    }
  }, []);



  const filteredImages = images.filter((item) => item.author === registration);

  

  const addButton = (company.some(item => item.author === registration) && images.some(item => item.author === registration))
    ? null
    : (
      <Link href="/Create/createCompany">
        
        <div className='flex justify-center flex-col items-center h-screen'>
        <Image src={'/greet.jpg'} width={500} height={650} />

          <button className="px-8 mt-5 py-3 bg-blue-600">Add Company</button>
        </div>

      </Link>
    );





  return (
    <>
      <Head>
        <title>CRM Billing System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="">
  {addButton}
  {company &&
    company.some(item => item.author === registration) &&
    images.some(item => item.author === registration) &&
    company
      .filter(item => item.author === registration)
      .map(item => (
        <div key={item._id} className="h-screen bg-gray-200 pt-20">
          <div className="max-w-sm mx-auto bg-white rounded-lg overflow-hidden shadow-lg">
            <div className="border-b px-4 pb-6">
              <div className="text-center my-4">
              {filteredImages.map(item=>(

                <Image width={300} height={350} alt='image' key={item._id}
                className="h-32 w-32 rounded-full border-4 border-white mx-auto my-4"
                src={`/uploads/${item.url.slice(15)}`}
                />
                ))}
                <div className="py-2">
                  <h3 className="font-bold text-2xl mb-1">{item.companyName.toUpperCase()}</h3>
                  <div className="inline-flex text-gray-700 items-center">
                    <svg
                      className="h-5 w-5 text-gray-400 mr-1"
                      fill="currentColor"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      width="24"
                      height="24"
                    >
                      <path
                        className=""
                        d="M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zm11.31-1.41a7 7 0 1 0-9.9 0L12 19.9l4.95-4.95zM12 14a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm0-2a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                      />
                    </svg>
                    {item.companyState}, {item.companyCountry}
                  </div>
                </div>
                <div className="bg-white rounded-lg p-4 mb-4">
  <div className="flex justify-between mb-2">
    <div className="font-semibold">Your Name:</div>
    <div className="font-bold">{item.ownerName}</div>
  </div>

  <div className="flex justify-between mb-2">
    <div className="font-semibold">Company Name:</div>
    <div className="font-bold">{item.companyName}</div>
  </div>

  <div className="flex justify-between mb-2">
    <div className="font-semibold">Your Website:</div>
    <a className="font-bold" href={`http://${item.companyWebsite}`}>
      {item.companyWebsite}
    </a>
  </div>

  <div className="flex justify-between">
    <div className="font-semibold">Your GSTIN:</div>
    <div className="font-bold">{item.gstin}</div>
  </div>
</div>

             
              </div>
            </div>
            
          </div>
        </div>
      ))}
</section>





    </>
  );
};

export default Home;

export async function getServerSideProps(context) {
  try {
    await connectDB();

    const company = await Company.find({})
    const images = await Images.find({})

    const companyDetails = company.map((item) => ({
      _id: item.id,
      gstin: item.gstin ? item.gstin : "",
      companyWebsite: item.companyWebsite ? item.companyWebsite : "",
      ownerName: item.ownerName ? item.ownerName : "",
      companyName: item.companyName ? item.companyName : "",
      companyStreet: item.companyStreet ? item.companyStreet : "",
      companyCity: item.companyCity ? item.companyCity : "",
      companyState: item.companyState ? item.companyState : "",
      companyZipcode: item.companyZipcode ? item.companyZipcode : "",
      companyCountry: item.companyCountry ? item.companyCountry : "",
      author: (item.author) ? (JSON.stringify(item.author).slice(1, -1)) : "",
    }));
    const imageDetails = images.map((item) => ({
      _id: item.id,
      url: item.url,
      author: (item.author) ? (JSON.stringify(item.author).slice(1, -1)) : "",
    }));

    return {
      props: {
        company: companyDetails,
        images: imageDetails,
      },
    };
  } catch (error) {
    console.log(error);
    return {
      props: { company: [], images: [] },
    };
  }
}
